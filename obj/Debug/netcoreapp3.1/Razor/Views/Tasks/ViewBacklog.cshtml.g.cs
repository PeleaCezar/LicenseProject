#pragma checksum "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "da93ae9d473d92689f84651b4202691fadccf50b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Tasks_ViewBacklog), @"mvc.1.0.view", @"/Views/Tasks/ViewBacklog.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\_ViewImports.cshtml"
using LicenseProject;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\_ViewImports.cshtml"
using LicenseProject.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da93ae9d473d92689f84651b4202691fadccf50b", @"/Views/Tasks/ViewBacklog.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b620a03c8bd1defafa68cc535ead280cfc5319c", @"/Views/_ViewImports.cshtml")]
    public class Views_Tasks_ViewBacklog : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<LicenseProject.ViewModels.UserTaskViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Theme/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Theme/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Theme/dist/js/adminlte.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control form-control-light"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("task-employee"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("p-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("task-employee-edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("hold-transition sidebar-mini sidebar-collapse"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b7283", async() => {
                WriteLiteral("\r\n    <!-- Font Awesome -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "da93ae9d473d92689f84651b4202691fadccf50b7574", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <!-- jQuery -->\r\n    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"\r\n            integrity=\"sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=\"\r\n            crossorigin=\"anonymous\"></script>\r\n    <!-- Font Awesome -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "da93ae9d473d92689f84651b4202691fadccf50b9004", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <!-- Bootstrap 4 -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b10211", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <!-- AdminLTE App -->\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b11660", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b13788", async() => {
                WriteLiteral(@"
    <div class=""wrapper"">
        <!-- Content Wrapper. Contains page content -->
        <div class=""content-wrapper"">
            <div ng-app=""ScrumApp"">
                <div>
                    <div class=""form"">
                        <class class=""row"">
                            <div class=""col-12"">
                                <h4 class=""page-title"">
                                    Sarcinile de lucru ale proiectului
                                    <a href=""#"" class=""btn btn-primary btn-sm ml-3"" data-toggle=""modal"" data-target=""#exampleModalCenter"">Creaza sarcina</a>
                                </h4>
                            </div>
                        </class>
");
                WriteLiteral(@"                        <div class=""modal fade task-modal-content show"" id=""exampleModalCenter"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
                            <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
                                <div class=""modal-content"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title"" id=""exampleModalCenterTitle"">Creaza o noua sarcina de lucru</h5>
                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                            <span aria-hidden=""true"">&times;</span>
                                        </button>
                                    </div>
                                    <div class=""modal-body"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b15799", async() => {
                    WriteLiteral(@"
                                            <div class=""form-group"">
                                                <label>Proiect</label>
                                                <select class=""form-control form-control-light"">
                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b16361", async() => {
#nullable restore
#line 47 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                       Write(ViewBag.Project.Title);

#line default
#line hidden
#nullable disable
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                </select>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-8"">
                                                    <div class=""form-group"">
                                                        <label> Titlul</label>
                                                        <input type=""text"" class=""form-control form-control-light"" id=""task"" placeholder=""Introdu titlul"">
                                                    </div>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <div class=""form-group"">
                                                        <label> Prioritate</label>
                                                        <select class=""form-control form-control-light"" id=""task");
                    WriteLiteral("-priority\">\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b18797", async() => {
                        WriteLiteral("Mica");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b19926", async() => {
                        WriteLiteral("Medie");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b21056", async() => {
                        WriteLiteral("Mare");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""form-group"">
                                                <label>Descriere</label>
                                                <textarea class=""form-control form-control-light"" id=""task-description"" placeholder=""Introdu o descriere"" rows=""3""></textarea>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-6"">
                                                    <div class=""form-group"">
                                                        <label>Aloca pe</label>
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b23097", async() => {
                        WriteLiteral("\r\n                                                        ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#nullable restore
#line 76 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(ViewBag.TeamMembers));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6"">
                                                    <div class=""form-group"">
                                                        <label for=""example-number-input"">Numar de ore necesare</label>
                                                        <input class=""form-control form-control-light"" type=""number"" id=""numberOfHours"">
                                                    </div>
                                                    <div class=""text-right"">
                                                        <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Inapoi</button>
                                                        <button type=""button"" class=""btn btn-primary"" id=""add-button"" data-dismiss=""modal"">Creaza</button>
                                                    </div>
     ");
                    WriteLiteral("                                           </div>\r\n                                            </div>\r\n                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
                WriteLiteral("\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n");
                WriteLiteral(@"                        <div class=""modal fade task-modal-content show"" id=""MyEditModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""MyEditModalTitle"" aria-hidden=""true"">
                            <div class=""modal-dialog modal-dialog-centered modal-lg"" role=""document"">
                                <div class=""modal-content"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title"" id=""MyEditModalTitle"">Modifica informatiile curente ale acestei sarcini de lucru</h5>
                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                            <span aria-hidden=""true"">&times;</span>
                                        </button>
                                    </div>
                                    <div class=""modal-body"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b28485", async() => {
                    WriteLiteral(@"
                                            <div class=""form-group"">
                                                <label>Proiect</label>
                                                <select class=""form-control form-control-light"">
                                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b29047", async() => {
#nullable restore
#line 114 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                       Write(ViewBag.Project.Title);

#line default
#line hidden
#nullable disable
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                </select>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-8"">
                                                    <div class=""form-group"">
                                                        <label> Titlul</label>
                                                        <input type=""text"" class=""form-control form-control-light"" id=""task-title-edit"" placeholder=""Introdu titlul"">
                                                    </div>
                                                </div>
                                                <div class=""col-md-4"">
                                                    <div class=""form-group"">
                                                        <label> Prioritate</label>
                                                        <select class=""form-control form-control-ligh");
                    WriteLiteral("t\" id=\"task-priority-edit\">\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b31500", async() => {
                        WriteLiteral("Mica");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b32629", async() => {
                        WriteLiteral("Medie");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b33759", async() => {
                        WriteLiteral("Mare");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""form-group"">
                                                <label>Descriere</label>
                                                <textarea class=""form-control form-control-light"" id=""task-description-edit"" placeholder=""Introdu o descriere"" rows=""3""></textarea>
                                            </div>
                                            <div class=""row"">
                                                <div class=""col-md-6"">
                                                    <div class=""form-group"">
                                                        <label>Aloca pe</label>
                                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b35805", async() => {
                        WriteLiteral("\r\n                                                        ");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#nullable restore
#line 143 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(ViewBag.TeamMembers));

#line default
#line hidden
#nullable disable
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                                    </div>
                                                </div>
                                                <div class=""col-md-6"">
                                                    <div class=""form-group"">
                                                        <label for=""example-number-input"">Numar de ore necesare</label>
                                                        <input class=""form-control form-control-light"" type=""number"" id=""numberOfHours-edit"">
                                                    </div>
                                                    <div class=""text-right"">
                                                        <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Inapoi</button>
                                                        <button type=""button"" class=""btn btn-primary"" id=""save-button"" data-dismiss=""modal"">Salveaza modificari</button>
                                              ");
                    WriteLiteral("      </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
                WriteLiteral(@"
                                    </div>

                                </div>
                            </div>
                        </div>
                        <class class=""row"">
                            <div class=""col-12"">
                                <div class=""board"">
                                    <div class=""tasks"">
                                        <div class=""backlog "">
                                            <h5 class=""mt-0 task-header text-uppercase text-center"">DE FACUT(<span id=""tasksTodo"">");
#nullable restore
#line 171 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                             Write(ViewBag.NoOfTasksToDo);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>)</h5>\r\n\r\n");
#nullable restore
#line 173 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                             foreach (var task in Model)
                                            {
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 175 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 if (task.Status == "De facut")
                                                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    <div class=\"btnDelete\" data-id=");
#nullable restore
#line 178 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                        <div class=\"input-group card mb-0\"");
                BeginWriteAttribute("id", " id=", 12811, "", 12827, 1);
#nullable restore
#line 179 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
WriteAttributeValue("", 12815, task.TaskID, 12815, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-id=");
#nullable restore
#line 179 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                            <div class=\"card-body p-3\">\r\n");
#nullable restore
#line 181 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                 if (task.Priority == "Mare")
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-danger\">");
#nullable restore
#line 182 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                             Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 182 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                       }
                                                            else if (task.Priority == "Medie")
                                                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-secondary\">");
#nullable restore
#line 184 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                            Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 184 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                      }
                                                        else if (task.Priority == "Mica")
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(" <span class=\"badge badge-success\">");
#nullable restore
#line 186 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                       Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 186 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                 }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                <h5 class=\"mt-2 mb-2\">\r\n                                                                    <a href=\"#\" data-toggle=\"modal\" data-target=\"#task-detail-modal\" data-id=");
#nullable restore
#line 188 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                        Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" class=\"text-body btnOpenModal\">\r\n                                                                        ");
#nullable restore
#line 189 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                   Write(task.TaskName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                    </a>
                                                                </h5>

                                                                <div class=""margin-top-10"">
                                                                    <button class=""button btn-outline-primary   button-backlog"" data-id=""");
#nullable restore
#line 194 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">De facut</button>\r\n                                                                    <button class=\"button btn-outline-secondary button-progress\" data-id=");
#nullable restore
#line 195 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Progres</button>\r\n                                                                    <button class=\"button btn-outline-warning   button-test\" data-id=");
#nullable restore
#line 196 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Testare</button>\r\n                                                                    <button class=\"button btn-outline-success   button-done\" data-id=");
#nullable restore
#line 197 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" data-unique=\"");
#nullable restore
#line 197 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                                          Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""">Terminat</button>
                                                                </div>

                                                                <div class=""dropdown float-right"">
                                                                    <a href=""#"" class=""dropdown-toggle text-muted arrow-none"" data-toggle=""dropdown"" aria-expanded=""false"">
                                                                        <i class=""fas fa-ellipsis-v font-18""></i>
                                                                    </a>
                                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                                        <a class=""dropdown-item btnEditTask"" data-id=""");
#nullable restore
#line 205 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                 Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""">
                                                                            <i class=""fas fa-pencil-alt mr-1""></i>
                                                                            Editeaza
                                                                        </a>
                                                                        <a class=""dropdown-item btnTaskDelete"" data-id=");
#nullable restore
#line 209 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                  Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-trash mr-1""></i>
                                                                            Sterge
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <p class=""mb-0"">
                                                                    <span class=""align-middle"">");
#nullable restore
#line 216 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                          Write(task.FullName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
");
#nullable restore
#line 221 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 221 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 
                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        </div>\r\n                                    </div>\r\n");
                WriteLiteral(@"                                    <div class=""modal fade"" id=""myModal"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
                                        <div class=""modal-dialog"">
                                            <div class=""modal-content"">
                                                <div class=""modal-header"">
                                                    <label class=""modal-title"" id=""TaskDeleteModalLabel""></label>
                                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                        <span aria-hidden=""true"">&times;</span>
                                                    </button>
                                                </div>
                                                <div class=""modal-body text-left"">
                                                    <p>Esti sigur ca doresti sa stergi aceasta sarcina de lucru?</p>
                   ");
                WriteLiteral("                             </div>\r\n                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da93ae9d473d92689f84651b4202691fadccf50b54365", async() => {
                    WriteLiteral(@"
                                                    <div class=""modal-footer justify-content-between"">
                                                        <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Inapoi</button>
                                                        <button type=""submit"" class=""btn btn-danger"" id=""btnDeleteYes"">Stergere</button>
                                                    </div>
                                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                            </div>
                                            <!-- /.modal-content -->
                                        </div>
                                        <!-- /.modal-dialog -->
                                    </div>
                                    <!-- /.modal -->
");
                WriteLiteral(@"                                    <div class=""modal fade task-modal-content"" id=""task-detail-modal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""TaskDetailModalLabel"" style=""display: none;"" aria-hiden=""true"">
                                        <div class=""modal-dialog modal-dialog-centered modal-lg"">
                                            <div class=""modal-content"">
                                                <div class=""modal-header"">
                                                    <label class=""modal-title"" id=""TaskDetailModalLabel"">


                                                    </label>
                                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
                                                </div>
                                                <div class=""modal-body"">
                                                    <div class=""p-2"">
                                                  ");
                WriteLiteral(@"      <h5 class=""mt-0"">Descriere:</h5>
                                                        <p class=""text-muted mb-4"">
                                                            <input class=""form-control "" readonly id=""task-description-details"">
                                                        </p>
                                                        <div class=""row"">
                                                            <div class=""col-md-6"">
                                                                <div class=""mb-4"">
                                                                    <h5>Prioritate</h5>
                                                                    <p>
                                                                        <input class=""form-control "" readonly id=""task-priority-details"">
                                                                    </p>
                                                                </div>
                 ");
                WriteLiteral(@"                                           </div>
                                                            <div class=""col-md-6"">
                                                                <div class=""mb-4"">
                                                                    <h5>Status actual</h5>
                                                                    <p>
                                                                        <input class=""form-control "" readonly id=""task-status-details"">
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class=""row"">
                                                            <div class=""col-md-4"">
                                                                <d");
                WriteLiteral(@"iv class=""mb-4"">
                                                                    <h5> Data crearii</h5>
                                                                    <p>
                                                                        <input class=""form-control "" readonly id=""task-startDate-details"">
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <div class=""col-md-4"">
                                                                <div class=""mb-4"">
                                                                    <h5> Ore estimate pe sarcina de lucru</h5>
                                                                    <p");
                BeginWriteAttribute("class", " class=\"", 23167, "\"", 23175, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                                        <input class=""form-control"" readonly id=""task-numberOfHours-details"">
                                                                    </p>
                                                                </div>
                                                            </div>
                                                            <div class=""col-md-4"">
                                                                <div class=""mb-4"">
                                                                    <h5> Destinat</h5>
                                                                    <p>
                                                                        <input class=""form-control "" readonly id=""task-userName-details"">
                                                                    </p>
                                                                </div>
                                                  ");
                WriteLiteral(@"          </div>
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""tasks"">
                                        <div class=""in-progress"">
                                            <h5 class=""mt-o task-header text-uppercase text-center"">IN PROGRES(<span id=""tasksInProgress"">");
#nullable restore
#line 320 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                     Write(ViewBag.NoOfTasksProgress);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>)</h5>\r\n");
#nullable restore
#line 321 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                             foreach (var task in Model)
                                            {
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 323 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 if (task.Status == "In progres")
                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    <div class=\"btnDelete\" data-id=");
#nullable restore
#line 325 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                        <div class=\"input-group card mb-0\"");
                BeginWriteAttribute("id", " id=", 25292, "", 25308, 1);
#nullable restore
#line 326 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
WriteAttributeValue("", 25296, task.TaskID, 25296, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-id=");
#nullable restore
#line 326 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                            <div class=\"card-body p-3\">\r\n");
#nullable restore
#line 328 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                 if (task.Priority == "Mare")
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-danger\">");
#nullable restore
#line 329 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                             Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 329 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                       }
                                                            else if (task.Priority == "Medie")
                                                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-secondary\">");
#nullable restore
#line 331 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                            Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 331 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                      }
                                                        else if (task.Priority == "Mica")
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(" <span class=\"badge badge-success\">");
#nullable restore
#line 333 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                       Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 333 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                 }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                <h5 class=\"mt-2 mb-2\">\r\n                                                                    <a href=\"#\" data-toggle=\"modal\" data-target=\"#task-detail-modal\" data-id=");
#nullable restore
#line 335 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                        Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" class=\"text-body btnOpenModal\">\r\n                                                                        ");
#nullable restore
#line 336 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                   Write(task.TaskName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                    </a>
                                                                </h5>

                                                                <div class=""margin-top-10"">
                                                                    <button class=""button btn-outline-primary   button-backlog"" data-id=""");
#nullable restore
#line 341 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">De facut</button>\r\n                                                                    <button class=\"button btn-outline-secondary button-progress\" data-id=");
#nullable restore
#line 342 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Progres</button>\r\n                                                                    <button class=\"button btn-outline-warning   button-test\" data-id=");
#nullable restore
#line 343 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Testare</button>\r\n                                                                    <button class=\"button btn-outline-success   button-done\" data-id=");
#nullable restore
#line 344 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" data-unique=\"");
#nullable restore
#line 344 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                                          Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""">Terminat</button>
                                                                </div>

                                                                <div class=""dropdown float-right"">
                                                                    <a href=""#"" class=""dropdown-toggle text-muted arrow-none"" data-toggle=""dropdown"" aria-expanded=""false"">
                                                                        <i class=""fas fa-ellipsis-v font-18""></i>
                                                                    </a>
                                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                                        <a class=""dropdown-item btnEditTask"" data-id=");
#nullable restore
#line 352 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-pencil-alt mr-1 ""></i>
                                                                            Editeaza
                                                                        </a>
                                                                        <a class=""dropdown-item btnTaskDelete"" data-id=");
#nullable restore
#line 356 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                  Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-trash mr-1""></i>
                                                                            Sterge
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <p class=""mb-0"">
                                                                    <span class=""align-middle"">");
#nullable restore
#line 363 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                          Write(task.FullName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
");
#nullable restore
#line 368 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 368 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 
                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                        </div>
                                    </div>
                                    <div class=""tasks"">
                                        <div class="" in-test"">                                                
                                            <h5 class=""mt-o task-header text-uppercase text-center"">IN TESTARE(<span id=""tasksTesting"">");
#nullable restore
#line 374 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                  Write(ViewBag.NoOfTasksTesting);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>)</h5>\r\n");
#nullable restore
#line 375 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                             foreach (var task in Model)
                                            {
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 377 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 if (task.Status == "In testare")
                                                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    <div class=\"btnDelete\" data-id=");
#nullable restore
#line 380 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                        <div class=\"input-group card mb-0\"");
                BeginWriteAttribute("id", " id=", 30421, "", 30437, 1);
#nullable restore
#line 381 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
WriteAttributeValue("", 30425, task.TaskID, 30425, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-id=");
#nullable restore
#line 381 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                            <div class=\"card-body p-3\">\r\n");
#nullable restore
#line 383 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                 if (task.Priority == "Mare")
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-danger\">");
#nullable restore
#line 384 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                             Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 384 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                       }
                                                            else if (task.Priority == "Medie")
                                                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-secondary\">");
#nullable restore
#line 386 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                            Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 386 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                      }
                                                        else if (task.Priority == "Mica")
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(" <span class=\"badge badge-success\">");
#nullable restore
#line 388 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                       Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 388 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                 }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                <h5 class=\"mt-2 mb-2\">\r\n                                                                    <a href=\"#\" data-toggle=\"modal\" data-target=\"#task-detail-modal\" data-id=");
#nullable restore
#line 390 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                        Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" class=\"text-body btnOpenModal\">\r\n                                                                        ");
#nullable restore
#line 391 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                   Write(task.TaskName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                    </a>
                                                                </h5>

                                                                <div class=""margin-top-10"">
                                                                    <button class=""button btn-outline-primary   button-backlog"" data-id=""");
#nullable restore
#line 396 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">De facut</button>\r\n                                                                    <button class=\"button btn-outline-secondary button-progress\" data-id=");
#nullable restore
#line 397 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Progres</button>\r\n                                                                    <button class=\"button btn-outline-warning   button-test\" data-id=");
#nullable restore
#line 398 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Testare</button>\r\n                                                                    <button class=\"button btn-outline-success   button-done\" data-id=");
#nullable restore
#line 399 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" data-unique=\"");
#nullable restore
#line 399 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                                          Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""">Terminat</button>
                                                                </div>

                                                                <div class=""dropdown float-right"">
                                                                    <a href=""#"" class=""dropdown-toggle text-muted arrow-none"" data-toggle=""dropdown"" aria-expanded=""false"">
                                                                        <i class=""fas fa-ellipsis-v font-18""></i>
                                                                    </a>
                                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                                        <a class=""dropdown-item btnEditTask"" data-id=");
#nullable restore
#line 407 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-pencil-alt mr-1""></i>
                                                                            Editeaza
                                                                        </a>
                                                                        <a class=""dropdown-item btnTaskDelete"" data-id=");
#nullable restore
#line 411 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                  Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-trash mr-1""></i>
                                                                            Sterge
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <p class=""mb-0"">
                                                                    <span class=""align-middle"">");
#nullable restore
#line 418 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                          Write(task.FullName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
");
#nullable restore
#line 423 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 423 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 
                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                        </div>
                                    </div>
                                    <div class=""tasks"">
                                        <div class=""done"">                                             
                                            <h5 class=""mt-o task-header text-uppercase text-center"">TERMINAT(<span id=""tasksDone"">");
#nullable restore
#line 429 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                             Write(ViewBag.NoOfTasksDone);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>)</h5>\r\n");
#nullable restore
#line 430 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                             foreach (var task in Model)
                                            {
                                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 432 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 if (task.Status == "Terminat")
                                                {


#line default
#line hidden
#nullable disable
                WriteLiteral("                                                    <div class=\"btnDelete\" data-id=");
#nullable restore
#line 435 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                        <div class=\"input-group card mb-0\"");
                BeginWriteAttribute("id", " id=", 35532, "", 35548, 1);
#nullable restore
#line 436 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
WriteAttributeValue("", 35536, task.TaskID, 35536, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-id=");
#nullable restore
#line 436 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                              Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">\r\n                                                            <div class=\"card-body p-3\">\r\n");
#nullable restore
#line 438 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                 if (task.Priority == "Mare")
                                                                {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-danger\">");
#nullable restore
#line 439 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                             Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 439 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                       }
                                                            else if (task.Priority == "Medie")
                                                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("<span class=\"badge badge-secondary\">");
#nullable restore
#line 441 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                            Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 441 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                      }
                                                        else if (task.Priority == "Mica")
                                                        {

#line default
#line hidden
#nullable disable
                WriteLiteral(" <span class=\"badge badge-success\">");
#nullable restore
#line 443 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                       Write(task.Priority);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>");
#nullable restore
#line 443 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                 }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                                                <h5 class=\"mt-2 mb-2\">\r\n                                                                    <a href=\"#\" data-toggle=\"modal\" data-target=\"#task-detail-modal\" data-id=");
#nullable restore
#line 445 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                        Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(" class=\"text-body btnOpenModal\">\r\n                                                                        ");
#nullable restore
#line 446 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                   Write(task.TaskName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                                                    </a>
                                                                </h5>

                                                                <div class=""margin-top-10"">
                                                                    <button class=""button btn-outline-primary   button-backlog"" data-id=""");
#nullable restore
#line 451 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">De facut</button>\r\n                                                                    <button class=\"button btn-outline-secondary button-progress\" data-id=");
#nullable restore
#line 452 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                    Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Progres</button>\r\n                                                                    <button class=\"button btn-outline-warning   button-test\" data-id=");
#nullable restore
#line 453 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(">Testare</button>\r\n                                                                    <button class=\"button btn-outline-success   button-done\" data-id=");
#nullable restore
#line 454 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">Terminat</button>
                                                                </div>

                                                                <div class=""dropdown float-right"">
                                                                    <a href=""#"" class=""dropdown-toggle text-muted arrow-none"" data-toggle=""dropdown"" aria-expanded=""false"">
                                                                        <i class=""fas fa-ellipsis-v font-18""></i>
                                                                    </a>
                                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                                        <a class=""dropdown-item btnEditTask"" data-id=");
#nullable restore
#line 462 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-pencil-alt mr-1""></i>
                                                                            Editeaza
                                                                        </a>
                                                                        <a class=""dropdown-item btnTaskDelete"" data-id=");
#nullable restore
#line 466 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                                                  Write(task.TaskID);

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                                            <i class=""fas fa-trash mr-1""></i>
                                                                            Sterge
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                                <p class=""mb-0"">
                                                                    <span class=""align-middle"">");
#nullable restore
#line 473 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                                                          Write(task.FullName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
");
#nullable restore
#line 478 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 478 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                                                 
                                            }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Modal for Hours-->
                            <div class=""modal fade"" id=""modalHours"" tabindex=""-1"" role=""dialog"" aria-labelledby=""modalHoursTitle"" aria-hidden=""true"">

                                <div class=""modal-dialog modal-dialog-centered"" role=""document"">
                                    <div class=""modal-content"">
                                        <div class=""modal-header"">
                                            <h5 class=""modal-title"" id=""modalHoursLongTitle"">Finalizare sarcina </h5>
                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                <span aria-hidden=""true"">&times;</span>
                                            </button>
                              ");
                WriteLiteral("          </div>\r\n                                        <div id=\"reservedTime\"");
                BeginWriteAttribute("class", " class=\"", 40856, "\"", 40864, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            <div class=""modal-body"">
                                                Te-ai incadrat in timpul alocat sarcinii de lucru?
                                            </div>
                                            <div class=""modal-footer justify-content-between"">

                                                <button type=""button"" class=""btn btn-light text-left"" data-dismiss=""modal"">Inapoi</button>
                                                <div class=""text-right"">
                                                    <button type=""button"" class=""btn btn-warning"" id=""not-button-hours"" onclick=""onClickNo()"">Nu</button>
                                                    <button type=""button"" class=""btn btn-primary"" id=""yes-button-hours"" data-dismiss=""modal"">Da</button>
                                                </div>
                                            </div>
                                        </div>

                    ");
                WriteLiteral(@"                    <div id=""numberOfActualHours"" class=""hidden"">
                                            <div class=""modal-body"">
                                                <label style=""text-align:center"">Numarul actual de ore</label>
                                                <input type=""number"" class=""form-control form-control-light col-lg-12"" id=""numarOreActual"" defaultValue=""null"" style=""text-align:center"">
                                            </div>
                                            <div class=""modal-footer justify-content-between"">
                                                <button type=""button"" class=""btn btn-light text-left"" onclick=""onClickBack()"">Inapoi</button>
                                                <div class=""text-right"">
                                                    <button type=""button"" class=""btn btn-primary btnSave"" id=""save-button-hours"" data-dismiss=""modal"">Salveaza</button>
                                                </div>");
                WriteLiteral(@"
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    body {
        color: #555;
        /*font-size: .9rem;*/
        font-weight: 400;
        line-height: 1.5;
        color: #6c757d;
        text-align: left;
        background-color: #fafbfe;
    }

    .form {
        background-color: #fafbfe;
        padding: 15px;
    }



    .button {
        display: inline-block;
        /*padding: 10px;*/
        background: linear-gradient(#79a6e2 2%, #3366aa 5%, #1e4e8e);
        border: none;
        border-radius: 5px;
        color: #fff;
        font-weight: bold;
        font-size: 14px;
        box-shadow: 0px 3px 0px #113c75, 0px 5px 5px #333;
        /*margin-right: 5px;*/
        /***/
        margin-bottom: 13px;
    }

    .btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-secondary:not(:disabled):not(.disabled):active, .show > .btn-outline-secondary.dropdown-toggle {
        color: #fff;
        background-color: #c06300;
        border-color: #c06300;
    }

    .btn-outline");
            WriteLiteral(@"-secondary:hover {
        color: #fff;
        background-color: #c06300;
        border-color: #c06300;
    }

    .btn-outline-warning:not(:disabled):not(.disabled).active, .btn-outline-warning:not(:disabled):not(.disabled):active, .show > .btn-outline-warning.dropdown-toggle {
        color: #fff;
        background-color: #ffc107;
        border-color: #ffc107;
    }

    .btn-outline-warning:hover {
        color: #fff;
        background-color: #ffc107;
        border-color: #ffc107;
    }

    .button-backlog {
        background: transparent;
        box-shadow: none;
        color: #3366aa;
        font-weight: normal;
    }

    .button-progress {
        background: transparent;
        box-shadow: none;
        color: #c06300;
        font-weight: normal;
    }

    .button-test {
        background: transparent;
        box-shadow: none;
        color: #b8b845;
        font-weight: normal;
    }

    .button-done {
        background: transparent;
       ");
            WriteLiteral(@" box-shadow: none;
        color: #007b03;
        font-weight: normal;
    }

    .button-dones {
        background: transparent;
        box-shadow: none;
        color: #007b03;
        font-weight: normal;
    }

    .button-delete {
        background: transparent;
        box-shadow: none;
        color: #be0000;
        font-weight: normal;
    }

    .form > h2 {
        margin-top: 0
    }

    .col-3rds {
        box-sizing: border-box;
        width: 33.333%;
        float: left;
    }

    .flex {
        display: flex;
        flex-direction: row;
    }

    .board {
        display: block;
        white-space: nowrap;
        /*overflow-x: auto;*/
    }

    .input-group {
        background-color: #fff;
    }



    .inline {
        display: inline;
    }

    .float-right {
        float: right;
    }

    .overflow {
        overflow: auto;
    }

    .margin-top-10 {
        margin-top: 13px;
    }


    .placeholder {
       ");
            WriteLiteral(@" display: block;
        background-color: #fff;
        border: 5px dashed #ededed;
        min-height: 100px;
        margin-bottom: 10px;
    }

    .task-modal-content .form-control-light {
        background-color: #f7f9fb !important;
        border-color: #f7f9fb !important;
    }

    label {
        font-weight: 600;
    }

    label {
        display: inline-block;
        margin-bottom: .5rem;
    }

    .form-control {
        display: block;
        width: 100%;
        height: calc(2.25rem + 2px);
        border: 1px solid #dee2e6 !important;
        padding: .45rem .9rem !important;
        font-size: .9rem;
        font-weight: 400;
        color: #6c757d;
        line-height: 1.5;
        background-clip: padding-box;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-box-shadow .15s ease-in-out
    }

    .card {
        word-wrap: break-word;
        background-color: #fff;
        positi");
            WriteLiteral(@"on: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        background-color: #fff;
        background-clip: border-box;
        border-radius: .25rem;
        border: none;
        box-shadow: 0 0 35px 0 rgba(154,161,171,.15);
    }

    .mb-0, .my-0 {
        margin-bottom: 0 !important;
    }

    .p-3 {
        padding: 1.5rem !important;
    }

    .card-body {
        -webkit-box-flex: 1;
        flex: 1 1 auto;
        min-height: 1px;
        font-family: Nunito,sans-serif;
    }

    .text-body {
        color: #6c757d !important;
        font-family: Arial;
    }

    .mb-2, .my-2 {
        margin-bottom: .75rem !important;
    }

    .h5, h5 {
        font-size: .9375rem;
    }


    .content-wrapper {
        background-color: #fafbfe
    }

    .task-header {
        font-family: Nunito,sans-serif;
        background-color: #f1f3fa;
        padding: 1rem;
        margin: 0 -1rem;
        /*color:#6c757d;
    ");
            WriteLiteral(@"white-space: nowrap;*/
    }

    .mt-0, .my-0 {
        margin-top: 0 !important;
    }

    .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
        font-weight: 700;
        line-height: 1.1;
        margin: 10px 0;
    }

    .h4, h4 {
        font-size: 1.125rem;
    }

    .page-title {
        color: #6c757d !important;
        font-size: 18px;
        margin: 0;
        line-height: 75px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        color: inherit;
    }

    .tasks:not(:last-child) {
        margin-right: 1.25rem !important;
    }

    .tasks {
        display: inline-block !important;
        width: 22rem !important;
        padding: 0 1rem 1rem 1rem !important;
        border: 1px solid #eef2f7 !important;
        vertical-align: top !important;
        margin-bottom: 24px !important;
        border-radius: .25rem !important;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
       ");
            WriteLiteral(@" margin-right: -12px;
        margin-left: -12px;
    }

    .col-12 {
        padding-left: 12px;
    }

    .tasks .card {
        white-space: normal;
        margin-top: 1rem;
    }

    .badge-danger {
        color: #fff;
        background-color: #f31919;
    }

    .badge-secondary {
        color: #fff;
        background-color: #6c757d;
    }

    .badge-success {
        color: #fff;
        background-color: #1dbe41;
    }

    .badge {
        display: inline-block;
        /*padding: .25em .4em;
        font-size: 75%;*/
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25rem;
        transition: color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-box-shadow .15s ease-in-out;
    }

    .btn-light {
        border-color: #6c757d;
    }

    .btn-danger {
        backg");
            WriteLiteral(@"round-color: #dc4351;
    }

    p {
        margin-top: 0;
    }

    .align-middle {
        vertical-align: middle !important;
    }
    /*modal details*/

    .fade:not(.show) {
        opacity: 0;
    }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1050;
        width: 100%;
        height: 100%;
        outline: 0;
    }

    .fade {
        transition: opacity .15s linear;
    }

    .modal.fade .modal-dialog {
        transition: transform .3s ease-out,-webkit-transform .3s ease-out;
    }

    .modal.show .modal-dialog {
        transform: none !important;
    }

    .modal-dialog {
        max-width: 800px;
        margin: 1.75rem auto;
    }

    .modal-dialog-centered {
        min-height: calc(100% - 3.5rem);
    }


    .modal-dialog-centered {
        display: flex;
        align-items: center;
    }

    .modal-dialog {
        position: relative;
        width: auto;
        pointer-events: none");
            WriteLiteral(@";
    }

    .modal-content {
        position: relative;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        flex-direction: column;
        width: 100%;
        pointer-events: auto;
        background-color: #fff;
        background-clip: padding-box;
        border: 0 solid transparent;
        border-radius: .2rem;
        outline: 0;
    }

    .modal-header {
        display: flex;
        -webkit-box-align: start;
        align-items: flex-start;
        -webkit-box-pack: justify;
        justify-content: space-between;
        padding: 1rem 1rem;
        border-bottom: 1px solid #dee2e6;
        border-top-left-radius: calc(.3rem - 1px);
        border-top-right-radius: calc(.3rem - 1px);
    }

    .modal-title {
        margin-bottom: 0;
        line-height: 1.5;
        color: #6c757d;
        margin-top: 0;
    }

    .modal-body {
        position: relative;
        -webkit-box-flex: 1;
        flex: ");
            WriteLiteral(@"1 1 auto;
        padding: 1rem;
    }

    .p-2 {
        padding: .75rem !important;
        white-space: normal;
    }

    .text-muted {
        color: #98a6ad !important;
    }

    .mb-4, .my-4 {
        margin-bottom: 2.25rem !important;
    }

    p {
        margin-top: 0;
        margin-bottom: 1rem;
    }

    .col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, ");
            WriteLiteral(@".col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
        position: relative;
        width: 100%;
        padding-right: 12px;
        padding-left: 12px;
    }
    /*dropdown*/
    .float-right {
        float: right !important;
    }

    .text-muted {
        color: #98a6ad !important;
    }

    .dropdown-toggle {
        white-space: nowrap;
        content: inherit !important;
    }

        .dropdown-toggle::after {
            content: inherit !important;
        }

    .dropdown-menu {
        -webkit-box-shadow: 0 0 35px 0 rgba(154,161,171,.15);
        box-shadow: 0 0 35px 0 rgba(154,161,171,.15);
    }

    .dropdown-menu-right {
        right: 0;
        left: auto;
    }

    .dropdown-menu {
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000;
        display: none;
        float: left;
        min-width: 10rem;
        padding: .25rem 0;
        margin: .125rem 0 0;
        font-size: .9rem;
   ");
            WriteLiteral(@"     color: #6c757d;
        text-align: left;
        list-style: none;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #e4eaf2;
        border-radius: .25rem;
    }

    .font-18 {
        font-size: 14px !important;
    }

    a.text-muted:hover {
        color: #98a6ad !important;
    }

    .dropdown-item {
        display: block;
        width: 100%;
        padding: .375rem 1.5rem;
        clear: both;
        font-weight: 400;
        color: #6c757d;
        text-align: inherit;
        white-space: nowrap;
        background-color: transparent;
        border: 0;
    }

    .mr-1, .mx-1 {
        margin-right: .375rem !important;
    }

    .dropdown-item.active, .dropdown-item:active {
        background-color: #f8f9fa;
    }

    .form-control:disabled, .form-control[readonly] {
        background-color: #f8f9fa;
        opacity: 1;
    }

    #modalHours .modal-dialog {
        max-width: 500px;
        ma");
            WriteLiteral(@"rgin: 1.75rem auto;
    }

    #myModal .modal-dialog {
        max-width: 700px;
        margin: 1.75rem auto;
    }

    .form-control-light {
        background-color: #f7f9fb !important;
        border-color: #f7f9fb !important;
    }
</style>


<script>
    //Init
    init();

    //Button Functions------------------------------------------
    function init() {
        $("".button-backlog"").on(""click"", function () {
            if (!($(this).closest("".backlog"").length > 0)) {
                $(this).parents("".input-group"").appendTo("".backlog"").css({
                    ""border"": """"
                });
            }
        });
        $("".button-progress"").on(""click"", function () {
            if (!($(this).closest("".in-progress"").length > 0)) {
                $(this).parents("".input-group"").appendTo("".in-progress"").css({
                    ""border"": """"

                });

            }
        });



        $("".button-test"").on(""click"", function () {
       ");
            WriteLiteral(@"     if (!($(this).closest("".in-test"").length > 0)) {
                $(this).parents("".input-group"").appendTo("".in-test"").css({
                    ""border"": """"
                });
            }
        });





        //comutare status De facut.
         $('button.button-backlog').on('click', function (e) {
            e.preventDefault();
            var id = $(this).closest('button').data('id');
            var status = ('De facut');
            var theStatus = GetTaskStatus(id);
            switch (theStatus) {
                case ""In progres"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tasksToDo++;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress--;
                    document.getElementById(""tasksTodo"").innerTe");
            WriteLiteral(@"xt = tasksToDo;
                    document.getElementById(""tasksInProgress"").innerText = tasksInProgress;
                    break;
                case ""In testare"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tasksToDo++;
                    tasksTesting = parseInt(tasksTesting, 10);
                    tasksTesting--;
                    document.getElementById(""tasksTodo"").innerText = tasksToDo;
                    document.getElementById(""tasksTesting"").innerText = tasksTesting;
                    break;
                case ""Terminat"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tas");
            WriteLiteral(@"ksToDo++;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone--;
                    document.getElementById(""tasksTodo"").innerText = tasksToDo;
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    break;
                default: break;
            }
               var statusTask = {};
            statusTask.status = status;
            statusTask.TaskID = (id);
            var statusTask = JSON.stringify(statusTask);
            console.info(statusTask);

                  $.ajax({
                            type: 'POST',
                          data: { statusResult: statusTask },
                          url: '/Tasks/UpdateStatus',
                          dataType: ""text"",
                          success: function (data) {


                          }
                  });
        });
        // comutare status In progress
        $('button.button-progress').on('click', function (e) {
      ");
            WriteLiteral(@"      e.preventDefault();
            var id = $(this).closest('button').data('id');
            var status =('In progres');
            var theStatus = GetTaskStatus(id);
            switch (theStatus) {
                case ""De facut"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tasksToDo--;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress++;
                    document.getElementById(""tasksTodo"").innerText = tasksToDo;
                    document.getElementById(""tasksInProgress"").innerText = tasksInProgress;
                    break;
                 case ""In testare"":
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    var tasksInProgress = document.getElementById(");
            WriteLiteral(@"""tasksInProgress"").innerText;
                    tasksTesting = parseInt(tasksTesting, 10);
                    tasksTesting--;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress++;      
                    document.getElementById(""tasksTesting"").innerText = tasksTesting;
                    document.getElementById(""tasksInProgress"").innerText = tasksInProgress;                   
                    break;
                case ""Terminat"":
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone--;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress++;      
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    document.getElementById(");
            WriteLiteral(@"""tasksInProgress"").innerText = tasksInProgress;                   
                    break;
                default: break;
            }
            
               var statusTask = {};
            statusTask.status = status;
            statusTask.TaskID = (id);
            var statusTask = JSON.stringify(statusTask);
            console.info(statusTask);

                  $.ajax({
                            type: 'POST',
                          data: { statusResult: statusTask },
                          url: '/Tasks/UpdateStatus',
                          dataType: ""text"",
                          success: function (data) {


                          }
                  });
        });
        //comutare status in testare
        $('button.button-test').on('click', function (e) {
            e.preventDefault();
            var id = $(this).closest('button').data('id');
            var status = ('In testare');
            var theStatus = GetTaskStatus(id);
            ");
            WriteLiteral(@"switch (theStatus) {
                case ""De facut"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tasksToDo--;
                    tasksTesting = parseInt(tasksTesting, 10);
                    tasksTesting++;
                    document.getElementById(""tasksTodo"").innerText = tasksToDo;
                    document.getElementById(""tasksTesting"").innerText = tasksTesting;
                    break;
                case ""In progres"":
                    var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress--;
                    tasksTesting = parseInt(tasksTesting, 10);
     ");
            WriteLiteral(@"               tasksTesting++;
                    document.getElementById(""tasksInProgress"").innerText = tasksInProgress;
                    document.getElementById(""tasksTesting"").innerText = tasksTesting;                    
                    break;
                case ""Terminat"":
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone--;
                    tasksTesting = parseInt(tasksTesting, 10);
                    tasksTesting++;
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    document.getElementById(""tasksTesting"").innerText = tasksTesting;
                    break;
                default: break;
            }
            var statusTask = {};
            statusTask.status = status;
            statusTask.TaskID = (id);
   ");
            WriteLiteral(@"         var statusTask = JSON.stringify(statusTask);
            console.info(statusTask);

            $.ajax({
                type: 'POST',
                data: { statusResult: statusTask },
                url: '/Tasks/UpdateStatus',
                dataType: ""text"",
                success: function (data) {


                }
            });
        });


        //comutare status Terminat si calculare a orelor corespunzatoare lui.
        $("".button-done"").on(""click"", function () {
            debugger;
            let moved = false;
            var id = $(this).closest('button').data('id');
            $.ajax({
                type: 'GET',
                url: `/Tasks/GiveStatus?id=${id}`,
                async: false,
                cache: false,
                timeout: 5000,
                error: function () {
                    return true;
                },
                success: function (data) {
                    response = data.data;
                }");
            WriteLiteral(@"
            });
            var status = (response.status)

            if (status != ""Terminat"") {
            var id = $(this).closest('button').data('id');
                var buttonInitial = $(this);
                debugger;
            $('#modalHours').data('id', id).modal('show');
            $(""#yes-button-hours"").on(""click"", function () {
                if (!(buttonInitial).closest("".done"").length > 0 && !moved) {
                    moved = true;
                    buttonInitial.parents("".input-group"").appendTo("".done"").css({
                        ""border"": """"
                    });
                    var statusTask = {};
                    statusTask.status = ""Terminat"";
                    var theStatus = GetTaskStatus(id);
                    switch (theStatus) {
                        case ""De facut"":
                            var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                            var tasksDone = document.getElementById(""tasksD");
            WriteLiteral(@"one"").innerText;
                            tasksToDo = parseInt(tasksToDo, 10);
                            tasksToDo--;
                            tasksDone = parseInt(tasksDone, 10);
                            tasksDone++;
                            document.getElementById(""tasksTodo"").innerText = tasksToDo;
                            document.getElementById(""tasksDone"").innerText = tasksDone;
                            break;
                        case ""In progres"":
                            var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                            var tasksDone = document.getElementById(""tasksDone"").innerText;
                            tasksInProgress = parseInt(tasksInProgress, 10);
                            tasksInProgress--;
                            tasksDone = parseInt(tasksDone, 10);
                            tasksDone++;
                            document.getElementById(""tasksInProgress"").innerText = tasksInProgress;");
            WriteLiteral(@"
                            document.getElementById(""tasksDone"").innerText = tasksDone;
                            break;
                        case ""In testare"":
                            var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                            var tasksDone = document.getElementById(""tasksDone"").innerText;
                            tasksTesting = parseInt(tasksTesting, 10);
                            tasksTesting--;
                            tasksDone = parseInt(tasksDone, 10);
                            tasksDone++;
                            document.getElementById(""tasksTesting"").innerText = tasksTesting;
                            document.getElementById(""tasksDone"").innerText = tasksDone;
                            break;
                        default: break;
                    }
                    statusTask.TaskID = (id);
                    var statusTask = JSON.stringify(statusTask);
                    console.info(statusT");
            WriteLiteral(@"ask);

                    $.ajax({
                        type: 'POST',
                        data: { statusResult: statusTask },
                        url: '/Tasks/UpdateStatus',
                        dataType: ""text"",
                        success: function (data) {


                        }
                    });

                }
            });
          }
        });




        //DETAILS
       $('a.btnOpenModal').on('click', function (e) {
            e.preventDefault();
            var id = $(this).closest('a').data('id');
           var response = undefined;
           $.ajax({
               type: 'GET',
               url: `/Tasks/DetailsTask?id=${id}`,
               async: false,
               cache: false,
               timeout: 5000,
               error: function () {
                   return true;
               },
               success: function (data) {
                   response = data.data;
               }
           });
        ");
            WriteLiteral(@"   if (response !== undefined) {
               var description = $(""#task-description-details"").val(response.description);
               var numberOfHours = $(""#task-numberOfHours-details"").val(response.numberOfHours);
               var startDate = $(""#task-startDate-details"").val(response.startDate);
               var employee = $(""#task-userName-details"").val(response.employee);
               var status = $(""#task-status-details"").val(response.status);
               var prioritate = $(""#task-priority-details"").val(response.priority);
               var titleHeader = $('#TaskDetailModalLabel').empty().append(response.name);

           }
        });

        //EDIT TASK---GET
        $('a.btnEditTask').on('click', function (e) {
            e.preventDefault();
            var id = $(this).closest('a').data('id');
            $('#MyEditModal').data('id', id).modal('show');
            var response = undefined;
            $.ajax({
                type: 'GET',
                url: `/T");
            WriteLiteral(@"asks/EditTask?id=${id}`,
                async: false,
                cache: false,
                timeout: 5000,
                error: function () {
                    return true;
                },
                success: function (data) {
                    response = data.data;
                }

            });
            if (response !== undefined) {
                var title = $(""#task-title-edit"").val(response.title);
                var description = $(""#task-description-edit"").val(response.description);
                var numberOfHours = $(""#numberOfHours-edit"").val(response.numberOfHours);
                var priority = $(""#task-priority-edit"").val(response.priority);
                var employee = $(""#task-employee-edit"").val(response.employee);

            }
        });

        ///EDIT TASK---POST
        $('#save-button').on('click', function (e) {
            var id = $('#MyEditModal').data('id');
        var title = $(""#task-title-edit"").val();
        var ");
            WriteLiteral(@"description = $(""#task-description-edit"").val();
        var numberOfHours = $(""#numberOfHours-edit"").val();
        var priority = $(""#task-priority-edit"").val();
        var employee = $(""#task-employee-edit"").val();
        var backlogTask = {};
        backlogTask.title = title;
        backlogTask.description = description;
        backlogTask.numberOfHours = numberOfHours;
        backlogTask.priority = priority;
        backlogTask.employee = employee;
        backlogTask.TaskID = (id);
        init();
        var backlogTask = JSON.stringify(backlogTask);
        console.info(backlogTask);
        $.ajax({
            type: 'POST',
            data: { jsonResult: backlogTask },
            url: '/Tasks/EditTask',
            dataType: ""text"",
            success: function (data) {
                window.location.reload();

            }
        });
    });

        //DELETE TASK
        $('a.btnTaskDelete').on('click', function (e) {
            e.preventDefault();
       ");
            WriteLiteral(@"     var id = $(this).closest('a').data('id');
            $('#myModal').data('id', id).modal('show');
           // $(this).parents("".input-group"").remove();
             var response = undefined;
            $.ajax({
                type: 'GET',
                url: `/Tasks/GiveNameTask?id=${id}`,
                async: false,
                cache: false,
                timeout: 5000,
                error: function () {
                    return true;
                },
                success: function (data) {
                    response = data.data;
                }
            });
                    if (response !== undefined) {
                var titleHeader = $('#TaskDeleteModalLabel').empty().append(response.title);
            }
        });


        $(""#btnDeleteYes"").on(""click"", function () {
            var id = $('#myModal').data('id');
            var myUrl = `/Tasks/Delete?id=${id}`;
            var data = undefined;
            $('[data-id=' + id + ']').remo");
            WriteLiteral(@"ve();
            var response = deleteProject(myUrl)
            if (response.success) {
            }
            else {
                toastr.error(""Eroare in timpul stergerii"");
            }
        });


        function deleteProject(url) {
            var dataResponse;
            $.ajax({
                type: 'GET',
                url: url,
                async: false,
                cache: false,
                timeout: 5000,
                success: function (data) {
                    toastr.success(data.message);
                }
            });
            return dataResponse;
        }



        var placeholderDiv = document.createElement(""div"");
        var placeholderAtt = document.createAttribute(""class"");
        var taskDivAttVal = placeholderAtt.value = ""placeholder"";
        placeholderDiv.setAttributeNode(placeholderAtt);

    }

    //Create Task------------------------------------------
    $(""#add-button"").on(""click"", function () {
       ");
            WriteLiteral(@" var taskDiv = document.createElement(""div"");
        var taskSpan = document.createElement(""span"");
        var buttonsDiv = document.createElement(""div"");
        var buttonBacklog = document.createElement(""button"");
        var buttonProgress = document.createElement(""button"");
        var buttonTest = document.createElement(""button"");
        var buttonDone = document.createElement(""button"");
        var buttonDelete = document.createElement(""button"");

        var taskDivAtt = document.createAttribute(""class"");
        var buttonsDivAtt = document.createAttribute(""class"");
        var buttonBacklogAtt = document.createAttribute(""class"");
        var buttonProgressAtt = document.createAttribute(""class"");
        var buttonTestAtt = document.createAttribute(""class"");
        var buttonDoneAtt = document.createAttribute(""class"");
        var buttonDeleteAtt = document.createAttribute(""class"");

        var taskDivAttVal = taskDivAtt.value = ""input-group overflow"";
        var buttonsDivAtt");
            WriteLiteral(@"Val = buttonsDivAtt.value = ""margin-top-10"";
        var buttonBacklogAttVal = buttonBacklogAtt.value = ""button button-backlog"";
        var buttonProgressAttVal = buttonProgressAtt.value = ""button button-progress"";
        var buttonTestAttVal = buttonTestAtt.value = ""button button-test"";
        var buttonDoneAttVal = buttonDoneAtt.value = ""button button-done"";
        var buttonDeleteAttVal = buttonDeleteAtt.value = ""button button-delete"";

        taskDiv.setAttributeNode(taskDivAtt);
        buttonsDiv.setAttributeNode(buttonsDivAtt);
        buttonBacklog.setAttributeNode(buttonBacklogAtt);
        buttonProgress.setAttributeNode(buttonProgressAtt);
        buttonTest.setAttributeNode(buttonTestAtt);
        buttonDone.setAttributeNode(buttonDoneAtt);
        buttonDelete.setAttributeNode(buttonDeleteAtt);

        var taskText = document.createTextNode($(""#task"").val());
        var title = $(""#task"").val();
        var description = $(""#task-description"").val();
        var numberOfH");
            WriteLiteral(@"ours = $(""#numberOfHours"").val();
        var priority = $(""#task-priority"").val();
        var employee = $(""#task-employee"").val();
        var backlogTask = {};
        backlogTask.title = title;
        backlogTask.description = description;
        backlogTask.numberOfHours = numberOfHours;
        backlogTask.priority = priority;
        backlogTask.employee = employee;


        var buttonBacklogText = document.createTextNode(""Backlog"");
        var buttonProgressText = document.createTextNode(""In Progres"");
        var buttonTestText = document.createTextNode(""In Testare"");
        var buttonDoneText = document.createTextNode(""Terminat"");
        var buttonDeleteText = document.createTextNode(""Sterge"");

        taskSpan.appendChild(taskText);
        taskDiv.appendChild(taskSpan);
        taskDiv.appendChild(buttonsDiv);
        buttonBacklog.appendChild(buttonBacklogText);
        buttonProgress.appendChild(buttonProgressText);
        buttonTest.appendChild(buttonTestText);
 ");
            WriteLiteral(@"       buttonDone.appendChild(buttonDoneText);
        buttonDelete.appendChild(buttonDeleteText);
        buttonsDiv.appendChild(buttonBacklog);
        buttonsDiv.appendChild(buttonProgress);
        buttonsDiv.appendChild(buttonDone);
        buttonsDiv.appendChild(buttonDelete);

        $('.backlog').append(taskDiv);
        backlogTask.ProjectId = ");
#nullable restore
#line 1602 "C:\Users\Cezar\Desktop\TOTAL\LicenseProject\LicenseProject\Views\Tasks\ViewBacklog.cshtml"
                           Write(ViewBag.Project.ID);

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
        init();
        var backlogTask = JSON.stringify(backlogTask);
        console.info(backlogTask);
        $.ajax({
            type: 'POST',
            data: { jsonResult: backlogTask },
            url: '/Tasks/CreateBacklogTask',
            dataType: ""text"",
            success: function (data) {
                window.location.reload();

            }
        });

    });
    // calculeaza orele pe task-- buton no
    function onClickNo() {
        let moved = false;
        var moreHoursInput = document.getElementById('numberOfActualHours');
        moreHoursInput = moreHoursInput.classList.remove('hidden');
        var initialDialog = document.getElementById('reservedTime');
        initialDialog = initialDialog.classList.add('hidden');
        var numberOfHours = document.getElementById('numarOreActual');
        if (numberOfHours !== undefined) {
            numberOfHours.value = null;
            numberOfHours = null;

        }

        $(""#save-button-hours""");
            WriteLiteral(@").on(""click"", function () {
             if (!moved) {
                 moved = true;
            var id = $('#modalHours').data('id');
            var button = $(`[data-unique=""${id}""]`);
            var card = $('#' + id);
            card.appendTo("".done"").data('id');
            var statusTask = {};
            statusTask.status = ""Terminat"";
            var theStatus = GetTaskStatus(id);
            switch (theStatus) {
                case ""De facut"":
                    var tasksToDo = document.getElementById(""tasksTodo"").innerText;
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    tasksToDo = parseInt(tasksToDo, 10);
                    tasksToDo--;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone++;
                    document.getElementById(""tasksTodo"").innerText = tasksToDo;
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    break;
      ");
            WriteLiteral(@"          case ""In progres"":
                    var tasksInProgress = document.getElementById(""tasksInProgress"").innerText;
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    tasksInProgress = parseInt(tasksInProgress, 10);
                    tasksInProgress--;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone++;
                    document.getElementById(""tasksInProgress"").innerText = tasksInProgress;
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    break;
                case ""In testare"":
                    var tasksTesting = document.getElementById(""tasksTesting"").innerText;
                    var tasksDone = document.getElementById(""tasksDone"").innerText;
                    tasksTesting = parseInt(tasksTesting, 10);
                    tasksTesting--;
                    tasksDone = parseInt(tasksDone, 10);
                    tasksDone++;
   ");
            WriteLiteral(@"                 document.getElementById(""tasksTesting"").innerText = tasksTesting;
                    document.getElementById(""tasksDone"").innerText = tasksDone;
                    break;
                default: break;
            }
            statusTask.TaskID = (id);
            var numberOfHours = $(""#numarOreActual"").val();
            statusTask.numberOfHours = numberOfHours;
            var statusTask = JSON.stringify(statusTask);
            console.info(statusTask);


            $.ajax({
                type: 'POST',
                data: { statusResult: statusTask },
                url: '/Tasks/UpdateStatus',
                dataType: ""text"",
                success: function (data) {


                }
            });
            onClickBack();


        }
        });
    }
    ///caluculeaza orele pe task -buton save

    ///caluculeaza orele pe task -buton inapoi
     function onClickBack() {
        var moreHoursInput = document.getElementById('numberOfActua");
            WriteLiteral(@"lHours');
        moreHoursInput = moreHoursInput.classList.add('hidden');
        var initialDialog = document.getElementById('reservedTime');
        initialDialog = initialDialog.classList.remove('hidden');
    }
</script>
<style>
    .hidden {
        display: none;
    }
</style>
<script>
    function GetTaskStatus(id) {
        var status = undefined;
        $.ajax({
            type: 'GET',
            url: `/Tasks/GetTaskStatus?id=${id}`,
            async: false,
            cache: false,
            timeout: 5000,
            success: function (data) {
                status = data.status;
            }
        });
        if (status !== undefined) {
            return status;
        }
    }


</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<LicenseProject.ViewModels.UserTaskViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
